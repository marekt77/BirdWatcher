// <auto-generated />
using System;
using BirdWatcherBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BirdWatcherBackend.Migrations
{
    [DbContext(typeof(BirdWatcherContext))]
    [Migration("20190417004046_BirdWatcherDBv1.0")]
    partial class BirdWatcherDBv10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BirdWatcherBackend.Models.Bird", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BirdType");

                    b.Property<string>("ImageFile");

                    b.HasKey("Id");

                    b.ToTable("Birds");
                });

            modelBuilder.Entity("BirdWatcherBackend.Models.BirdLog", b =>
                {
                    b.Property<long>("BirdLogId")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("BirdId");

                    b.Property<float>("Temperature");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("BirdLogId");

                    b.HasIndex("BirdId");

                    b.ToTable("BirdLog");
                });

            modelBuilder.Entity("BirdWatcherBackend.Models.devTempLight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("PhotoresistorValue");

                    b.Property<float>("Temperature");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.ToTable("devTempLight");
                });

            modelBuilder.Entity("BirdWatcherBackend.Models.BirdLog", b =>
                {
                    b.HasOne("BirdWatcherBackend.Models.Bird", "Bird")
                        .WithMany()
                        .HasForeignKey("BirdId");
                });
#pragma warning restore 612, 618
        }
    }
}
